<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +1Lyx9thRe6OSuj52qVUbFWQ2KVGbJaz2Gf/2Q==
</value>
  </data>
</root>